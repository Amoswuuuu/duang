'use strict';

const database = [...(function*() {
  const prefix = [ '青铜', '铁', '钢', '银', '金', '白金', '陨铁', '怪异', '目光锐利', '雪', '颤抖', '北风', '寒冬', '烈火', '闷烧', '烟雾', '燃烧', '浓缩', '静态', '发光', '嗡叫', '弯曲', '震撼', '腐败', '腐烂', '腐蚀', '剧毒', '瘟疫', '锯齿', '致命', '恶毒', '残酷', '稳重', '野蛮', '绝情', '凶暴', '残忍', '幻影', '愚人', '磨碎', '尖锐', '精良', '战士', '士兵', '骑士', '君王', '国王', '大师', '宗师', '月精灵', '田园', '超自然', '星间', '极乐', '天体', '净化', '纯洁', '神圣', '圣洁', '神性', '结实', '强壮', '光荣', '祝福', '崇高', '神', '忠诚', '蜥蜴', '蛇', '海蛇', '蜉蝣', '龙', '维特', '巨飞龙', '巴哈姆特', '记忆', '微光', '枣红', '赤褐', '深红', '红宝石', '天青', '天蓝', '钴', '蔚蓝', '红柑', '赭黄', '珊瑚', '琥珀', '海蓝', '铭绿', '翠绿', '祖母绿', '闪耀', '彩虹', '闪闪发光', '棱镜', '多彩', '处女', '女武神', '屠杀者', '狂战士', '僧人', '牧师', '召唤者', '死灵法师', '天使', '大天使', '巫师', '祭祀', '法师杀手', '女巫猎人', '制箭者', '制弓匠', '弓箭手', '特技', '体技', '竞赛', '鱼叉手', '女矛手', '长枪兵', '炎热', '火山', '火光', '充能', '力量十足', '寒意', '冰冻', '冰冷', '中魔', '枯萎', '诅咒', '霉菌', '有害', '盗墓者', '雄壮', '石魔之王', '狮子烙印', '老鹰烙印', '玫瑰烙印', '队长', '指挥官', '元帅', '保护者', '主管', '守护者', '专家', '老手', '狂信', '猛烈', '狂怒', '冥想', '回想', '回音', '训练师', '看守人', '管理者', '精神', '猛禽', '共有', '自然', '尘土', '盖亚', '诱骗', '欺诈', '冷静', '心智', '心灵', '阴影', '将军', '剑士', '剑圣', '奸诈', '成功', '优胜', '得体', '偶然', '凹凸', '活力', '不倦', '尖叫', '咆哮', '哭号', '技工', '工匠', '珠宝匠', '密实', '细瘦', '密集' ];
  const postfix = [ '力量', '武力', '公牛', '巨人', '泰坦', '擎天神', '敏捷', '技能', '准确', '精密', '完美', '涅磐', '能源', '思想', '才华', '幻术', '法术', '启发', '豺狼', '狐狸', '狂狼', '猛虎', '猛犸', '太阳神', '乌贼', '巨鲸', '光明', '光彩', '太阳', '价值', '测量', '精灵', '表现', '超凡', '工匠', '品质', '残废', '屠杀', '凝血', '残杀', '吸精', '火焰', '烈火', '燃烧', '炽炎', '霜冻', '冰刺', '冰河', '严冬', '冲击', '闪电', '雷电', '暴风', '毒素', '瘟疫', '炭疽', '医治', '演进', '反抗', '妖巫', '蝗虫', '八目鳗', '蝙蝠', '死灵', '吸血鬼', '重造', '重生', '复苏', '迅速', '轻快', '快速', '格挡', '偏向', '平衡', '均衡', '稳定', '生命', '保护', '吸收', '永生', '和睦', '防避', '步哨', '守卫', '否定', '贪婪', '财富', '机会', '幸运', '好运', '学徒', '马格斯', '刺尖', '尖刺', '剃刀', '刀剑', '安逸', '简朴', '步伐', '匆忙', '速度', '传送', '加速', '巨熊', '刺穿', '下流', '溶解', '自我修护', '回复', '岁月', '补充', '传播', '半人马', '记忆', '巨象' ];
  const result = [];
  for(let i = 0; i < prefix.length; i++) {
    for(let j = 0; j < postfix.length; j++) {
      result.push(postfix[j] + '之' + prefix[i] + '的数据');
    }
  }
  result.sort(function() { return Math.random() - 0.5; });
  for(let k = 0; k < result.length; k++) yield result[k];
})()];

const rnd = n => n * Math.random() | 0;
const AD = () => String.fromCharCode('A'.charCodeAt(0) + rnd(4));

module.exports = class extends Array {
  constructor(num = 200) {
    super();
    this.inc = 1;
    for (let i = 0; i < num; i++) {
      this.push({
        name: database.pop(),
        desc: database.pop(),
        opts: [ ...new Set([ ...Array(4) ].map(AD)) ].sort(),
        level: AD(),
        radio: AD()
      });
    }
  }
  push(...args) {
    args.forEach(data => super.push(Object.assign({ id: this.inc++ }, data)));
  }
};
